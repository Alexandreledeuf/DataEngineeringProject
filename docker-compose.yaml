version: '3'
services:
  frontend:
    build: 
      context: .
      dockerfile: ./frontend/Dockerfile.dockerfile
    ports:
      - 3000:3000
  backend:
    build: 
      context: .
      dockerfile: ./backend/Dockerfile.dockerfile
    ports:
      - 8083:8083
  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always
  

  #grafana:
  #  image: grafana/grafana
  #  user: "472"
  #  depends_on:
  #    - prometheus
  #  ports:
  #    - 3000:3000
  #  volumes:
  #    - grafana_data:/var/lib/grafana
  #    - ./grafana/provisioning/:/etc/grafana/provisioning/
  #  env_file:
  #    - ./grafana/config.monitoring
  #  networks:
  #    - back-tier
  #    - front-tier
  #  restart: always